from .config import *
from .utils import authorize_google_sheets, get_experiment_data
from .data_loading import (
    build_traces_df,
    build_spout_df,
)
from .data_processing import (
    extract_zip_files,
    load_experiment_metadata,
    process_lick_data,
    compute_spout_order,
    compute_lick_rate,
    create_and_merge_spine,
    fill_missing_spout_ids,
    merge_spout_info,
)
from .signal_processing import (
    downsample_stream,
    double_exponential,
    get_bounds,
    estimate_amplitude,
    estimate_time_constant,
    get_initial_params,
    detrend_signal,
)
from .analysis import (
    calculate_total_licks_per_trial,
    calculate_average_licks_per_spout,
    organize_lick_data_by_spout,
    aggregate_data_and_calculate_sem,
    calculate_zscores,
    add_auc,
)
from .fiber_photometry import (
    nape_cart_processing,
    is_first_mouse,
    is_second_mouse,
    process_mouse,
    process_block_path,
    process_all_blocks,
)
from .plotting import plot_lick_rate, plot_total_licks

__all__.extend([
    'downsample_stream',
    'double_exponential',
    'get_bounds',
    'estimate_amplitude',
    'estimate_time_constant',
    'get_initial_params',
    'detrend_signal',
    'build_traces_df',
    'build_spout_df',
    'calculate_zscores',
    'add_auc',
    'nape_cart_processing',
    'is_first_mouse',
    'is_second_mouse',
    'process_mouse',
    'process_block_path',
    'process_all_blocks',
    'authorize_google_sheets',
    'get_experiment_data',
    'extract_zip_files',
    'load_experiment_metadata',
    'process_lick_data',
    'compute_lick_rate',
    'merge_spout_info',
    'plot_lick_rate',
    'plot_total_licks',
    'LICK_CODES',
    'SPOUT_EXT_CODE',
    'SPOUT_POS_CODE',
    'VALID_SPOUT_POS',
    'LICK_DATA_COLS',
    'NUM_TRIALS',
    'BIN_SIZE_MS',
    'DAY_COLORS',
    'LIQUIDS_COLORS',
    'DOWNSAMPLE_RATE',
    'TRIAL_START',
    'TRIAL_END',
    'BASELINE_START',
    'BASELINE_END',
    'SEC_TO_DROP_START',
    'SEC_TO_DROP_END',
    'GOOGLE_SHEET_URL',
    'MOUSE_GROUPS',
])
